# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: 'docker-service-connection'
  imageRepository: 'pdesaidocker/easy-kart-api-notification'
  containerRegistry: 'pdesaidocker'
  tag: '$(Build.BuildId)'
  System.Debug: true

stages:
- stage: Build
  displayName: Build
  jobs:
    - job: BuildAndPush
      displayName: Build and Push Docker Image
      steps:
      - task: NuGetAuthenticate@1      
      - task: DotNetCoreCLI@2
        inputs:
           command: 'restore'
           projects: 'EasyKart.Notification/EasyKart.Notification.csproj'
           feedsToUse: 'config'
           nugetConfigPath: 'EasyKart.Notification/nuget.config'
           externalFeedCredentials: 'nuget-art'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          projects: 'EasyKart.Notification/EasyKart.Notification.csproj'
          arguments: '--configuration Release'
      - task: Docker@2
        displayName: Build and push Docker image
        inputs:
          command: 'buildAndPush'
          repository: $(imageRepository)
          dockerfile: 'EasyKart.Notification/Dockerfile'
          buildContext: '.'
          tags: $(tag)
          containerRegistry: $(dockerRegistryServiceConnection)

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - job: DeployToAKS
    displayName: Deploy to AKS
    steps:
    - script: |
        echo "Replacing {{imageTag}} in deployment.yaml with $(tag)"
        sed -i 's/{{imageTag}}/$(tag)/g' EasyKart.Notification/deployment.yaml
      displayName: Replace tag in deployment.yaml
    - task: Kubernetes@1
      displayName: Apply deployment.yaml
      inputs:
        kubernetesServiceEndpoint: 'az-k8s-easy-kart'
        namespace: 'easy-kart'
        command: 'apply'
        arguments: '-f EasyKart.Notification/deployment.yaml'
    - task: Kubernetes@1
      displayName: Apply service.yaml
      inputs:
        kubernetesServiceEndpoint: 'az-k8s-easy-kart'
        namespace: 'easy-kart'
        command: 'apply'
        arguments: '-f EasyKart.Notification/service.yaml'